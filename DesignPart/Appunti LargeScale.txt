Simple query MongoDb:
->Data una canzone restituisci:
    ->Le playlist che la contengono in ordine di media voto decrescente
    ->I commenti relativi ad essa in ordine di data decrescente
    ->Il voto medio della canzone
    ->Il testo della canzone

->Dato un User restituisci:
    ->playlist create 
    ->playlist seguite
    ->commenti fatti dall'utente

->Data una playlist restituisci:
    ->Canzoni che la compongono
    ->il voto medio
    ->la lista degli user che la seguono

Analytics and Statistics:
->playlist
    ->Voto medio della playlist
    ->In media una playlist da quante canzoni è composta?
    ->In media una playlist da quanti utenti è seguita?
    ->In media una playlist quanti artisti contiene?

->canzone:
    ->Voto medio della canzone
    ->In media una canzone quanti commenti ha
    ->In media una canzone in quante playlist è contenuta
    ->

utente:
    ->In media un utente da quanti utenti è seguito?
    ->In media un utente quante playlist segue?
    ->In medi un utente quante canzoni commenta?
    ->In media un utente quante playlist crea?

Commenti:
    ->in media un commento da quante lettere è composto?(Cioè in media quanto è lungo un commento)




3 Aggregations for MongoDb:
    ->Restituire i primi 10 artisti relativi alle canzoni con il voto medio più alto
    ->Restituire le prime 10 playlist che hanno le canzoni con il voto più alto
    ->Restituire le prime 10 canzoni che hanno le playlist con il voto medio più alto
    ->Trovare i 10 utenti che creano più playlist

2 On-graph queries:
    ->Trovare i 10 utenti più seguiti
    ->Trovare i 10 utenti che scrivono più commenti (se mettiamo commenti nel graph)
    ->Per ogni utente tra i 10 più seguiti trovare le 10 playlist che segue che sono le più seguite. 
    ->Trovare le 10 playlist più seguite
    ->Trovare le 10 canzoni più commentate
    ->Trovare le 10 canzoni più condivise tra tuttte le playlist
    ->Per ogni canzone tra le 10 più diffuse trovare le 5 playlist più seguite 



#AGGIUNTE:

#Aggiunte da Lorenzo

--- MongoDB Queries analysis ---

Read Operations
    1) Find all the playlist created by a user 
    2) Find all the songs contained in a playlist
    3) Find all the playlists that contains a specific song 
    4) Find a user, playlist, song by ID
    4.5) Find a user, playlist, song starting from a string ( ex: song name, playlist name, user username )
    5) Retrive the five playlists that have the most number of songs 
    6) Retrive the five songs that has the highest avg rating 
    7) Retrive the five most popular songs (based on how many playlist contains that specific song)
    8) Retrive the three users who have created the most number of playlists 
    9) Retrive the three oldest/newest playlists of a specific user

Write Operations
    1) Add a user/playlist/song
    2) Delete a user/playlist/song
    3) Modify a user/playlist/song




--- GraphDB Queries Analysis ---

Read Operations 
    1) Show all the comments related to a song (even ordered by vote)
    2) Retrive the number of playlist's follows
    3) Retrive if exist a follow relation between a user and playlist
    4) Retrive the most followed playlist
    5) Retrive if exist a follow relation between a user and a user
    6) Retrive the users that follows at least k same playlists of the User provided in input
    7) Retrive the most active Users in terms of follows and comments
    8) Retrive the most followed users 
    9) Show the number of comments related to a song
    10) Find a user, playlist, song from a string

Write Operations
    1) Add a user/playlist/song/comment
    2) Delete a user/playlist/song/comment
    3) Modify a user/playlist/song/comment
